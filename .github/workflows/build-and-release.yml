name: Build and Release C# Extension (with Roslyn Server)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [main, master]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Checkout upstream vscode-csharp
        uses: actions/checkout@v4
        with:
          repository: dotnet/vscode-csharp
          ref: main         # 필요시 release 브랜치/tag로 변경
          path: upstream

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 핵심 빌드 단계!
      - name: Install dependencies and build VSIX
        run: |
          cd upstream
          npm ci
          npm run package   # roslyn 서버 포함 VSIX 자동 생성

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-csharp.vsix
          path: upstream/*.vsix

      #- name: Create Release
      #  id: create_release
      #  uses: softprops/action-gh-release@v2
      #  with:
      #    tag_name: csharp-auto-${{ github.run_id }}
      #    name: Automated Build ${{ github.run_id }}
      #    body: |
      #      Automated build of the latest vscode-csharp with Roslyn server included.
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Upload VSIX to Release
      #  uses: softprops/action-gh-release@v2
      #  with:
      #    files: upstream/*.vsix
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Publish to Open VSX
      #  if: env.OPEN_VSX_TOKEN != ''
      #  run: |
      #    cd upstream
      #    npm install -g ovsx
      #    ovsx publish *.vsix -p $OPEN_VSX_TOKEN
      #  env:
      #    OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}

      # (Optional) 빌드 검증
      - name: Verify Roslyn server inclusion
        run: |
          cd upstream
          if ! ls *.vsix | grep -q .; then
            echo "VSIX package not found!"
            exit 1
          fi
